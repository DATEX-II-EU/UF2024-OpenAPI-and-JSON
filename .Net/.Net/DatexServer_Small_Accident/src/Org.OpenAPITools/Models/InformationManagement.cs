/*
 * DATEX II Snapshot Pull API
 *
 * This is DATEX II Snapshot PULL API returning PayloadPublication.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: you@your-company.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class InformationManagement : IEquatable<InformationManagement>
    {
        /// <summary>
        /// Gets or Sets InformationManagedResourceList
        /// </summary>
        [DataMember(Name="informationManagedResourceList", EmitDefaultValue=false)]
        public InformationManagedResourceList InformationManagedResourceList { get; set; }

        /// <summary>
        /// Gets or Sets InformationManagementExtensionG
        /// </summary>
        [DataMember(Name="informationManagementExtensionG", EmitDefaultValue=false)]
        public Dictionary<string, Object> InformationManagementExtensionG { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InformationManagement {\n");
            sb.Append("  InformationManagedResourceList: ").Append(InformationManagedResourceList).Append("\n");
            sb.Append("  InformationManagementExtensionG: ").Append(InformationManagementExtensionG).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((InformationManagement)obj);
        }

        /// <summary>
        /// Returns true if InformationManagement instances are equal
        /// </summary>
        /// <param name="other">Instance of InformationManagement to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InformationManagement other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    InformationManagedResourceList == other.InformationManagedResourceList ||
                    InformationManagedResourceList != null &&
                    InformationManagedResourceList.Equals(other.InformationManagedResourceList)
                ) && 
                (
                    InformationManagementExtensionG == other.InformationManagementExtensionG ||
                    InformationManagementExtensionG != null &&
                    other.InformationManagementExtensionG != null &&
                    InformationManagementExtensionG.SequenceEqual(other.InformationManagementExtensionG)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (InformationManagedResourceList != null)
                    hashCode = hashCode * 59 + InformationManagedResourceList.GetHashCode();
                    if (InformationManagementExtensionG != null)
                    hashCode = hashCode * 59 + InformationManagementExtensionG.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(InformationManagement left, InformationManagement right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(InformationManagement left, InformationManagement right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
