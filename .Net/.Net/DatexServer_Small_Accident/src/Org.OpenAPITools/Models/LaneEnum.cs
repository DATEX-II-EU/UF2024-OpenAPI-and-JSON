/*
 * DATEX II Snapshot Pull API
 *
 * This is DATEX II Snapshot PULL API returning PayloadPublication.
 *
 * The version of the OpenAPI document: 1.0.2
 * Contact: you@your-company.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// Gets or Sets LaneEnum
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<LaneEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum LaneEnum
        {
            
            /// <summary>
            /// Enum AllLanesCompleteCarriagewayEnum for allLanesCompleteCarriageway
            /// </summary>
            [EnumMember(Value = "allLanesCompleteCarriageway")]
            AllLanesCompleteCarriagewayEnum = 1,
            
            /// <summary>
            /// Enum BusLaneEnum for busLane
            /// </summary>
            [EnumMember(Value = "busLane")]
            BusLaneEnum = 2,
            
            /// <summary>
            /// Enum BusStopEnum for busStop
            /// </summary>
            [EnumMember(Value = "busStop")]
            BusStopEnum = 3,
            
            /// <summary>
            /// Enum CarPoolLaneEnum for carPoolLane
            /// </summary>
            [EnumMember(Value = "carPoolLane")]
            CarPoolLaneEnum = 4,
            
            /// <summary>
            /// Enum CentralReservationEnum for centralReservation
            /// </summary>
            [EnumMember(Value = "centralReservation")]
            CentralReservationEnum = 5,
            
            /// <summary>
            /// Enum CrawlerLaneEnum for crawlerLane
            /// </summary>
            [EnumMember(Value = "crawlerLane")]
            CrawlerLaneEnum = 6,
            
            /// <summary>
            /// Enum CycleLaneEnum for cycleLane
            /// </summary>
            [EnumMember(Value = "cycleLane")]
            CycleLaneEnum = 7,
            
            /// <summary>
            /// Enum EmergencyLaneEnum for emergencyLane
            /// </summary>
            [EnumMember(Value = "emergencyLane")]
            EmergencyLaneEnum = 8,
            
            /// <summary>
            /// Enum EscapeLaneEnum for escapeLane
            /// </summary>
            [EnumMember(Value = "escapeLane")]
            EscapeLaneEnum = 9,
            
            /// <summary>
            /// Enum ExpressLaneEnum for expressLane
            /// </summary>
            [EnumMember(Value = "expressLane")]
            ExpressLaneEnum = 10,
            
            /// <summary>
            /// Enum HardShoulderEnum for hardShoulder
            /// </summary>
            [EnumMember(Value = "hardShoulder")]
            HardShoulderEnum = 11,
            
            /// <summary>
            /// Enum HeavyVehicleLaneEnum for heavyVehicleLane
            /// </summary>
            [EnumMember(Value = "heavyVehicleLane")]
            HeavyVehicleLaneEnum = 12,
            
            /// <summary>
            /// Enum LayByEnum for layBy
            /// </summary>
            [EnumMember(Value = "layBy")]
            LayByEnum = 13,
            
            /// <summary>
            /// Enum LeftHandTurningLaneEnum for leftHandTurningLane
            /// </summary>
            [EnumMember(Value = "leftHandTurningLane")]
            LeftHandTurningLaneEnum = 14,
            
            /// <summary>
            /// Enum LeftLaneEnum for leftLane
            /// </summary>
            [EnumMember(Value = "leftLane")]
            LeftLaneEnum = 15,
            
            /// <summary>
            /// Enum LocalTrafficLaneEnum for localTrafficLane
            /// </summary>
            [EnumMember(Value = "localTrafficLane")]
            LocalTrafficLaneEnum = 16,
            
            /// <summary>
            /// Enum MiddleLaneEnum for middleLane
            /// </summary>
            [EnumMember(Value = "middleLane")]
            MiddleLaneEnum = 17,
            
            /// <summary>
            /// Enum OvertakingLaneEnum for overtakingLane
            /// </summary>
            [EnumMember(Value = "overtakingLane")]
            OvertakingLaneEnum = 18,
            
            /// <summary>
            /// Enum RightHandTurningLaneEnum for rightHandTurningLane
            /// </summary>
            [EnumMember(Value = "rightHandTurningLane")]
            RightHandTurningLaneEnum = 19,
            
            /// <summary>
            /// Enum RightLaneEnum for rightLane
            /// </summary>
            [EnumMember(Value = "rightLane")]
            RightLaneEnum = 20,
            
            /// <summary>
            /// Enum RushHourLaneEnum for rushHourLane
            /// </summary>
            [EnumMember(Value = "rushHourLane")]
            RushHourLaneEnum = 21,
            
            /// <summary>
            /// Enum SetDownAreaEnum for setDownArea
            /// </summary>
            [EnumMember(Value = "setDownArea")]
            SetDownAreaEnum = 22,
            
            /// <summary>
            /// Enum SlowVehicleLaneEnum for slowVehicleLane
            /// </summary>
            [EnumMember(Value = "slowVehicleLane")]
            SlowVehicleLaneEnum = 23,
            
            /// <summary>
            /// Enum ThroughTrafficLaneEnum for throughTrafficLane
            /// </summary>
            [EnumMember(Value = "throughTrafficLane")]
            ThroughTrafficLaneEnum = 24,
            
            /// <summary>
            /// Enum TidalFlowLaneEnum for tidalFlowLane
            /// </summary>
            [EnumMember(Value = "tidalFlowLane")]
            TidalFlowLaneEnum = 25,
            
            /// <summary>
            /// Enum TurningLaneEnum for turningLane
            /// </summary>
            [EnumMember(Value = "turningLane")]
            TurningLaneEnum = 26,
            
            /// <summary>
            /// Enum VergeEnum for verge
            /// </summary>
            [EnumMember(Value = "verge")]
            VergeEnum = 27,
            
            /// <summary>
            /// Enum ExtendedGEnum for extendedG
            /// </summary>
            [EnumMember(Value = "extendedG")]
            ExtendedGEnum = 28
        }
}
