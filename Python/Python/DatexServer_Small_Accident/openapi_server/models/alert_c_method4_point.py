from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.alert_c_direction import AlertCDirection
from openapi_server.models.alert_c_method4_primary_point_location import AlertCMethod4PrimaryPointLocation
from openapi_server import util

from openapi_server.models.alert_c_direction import AlertCDirection  # noqa: E501
from openapi_server.models.alert_c_method4_primary_point_location import AlertCMethod4PrimaryPointLocation  # noqa: E501

class AlertCMethod4Point(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_c_location_country_code=None, alert_c_location_table_number=None, alert_c_location_table_version=None, alert_c_direction=None, alert_c_method4_primary_point_location=None, alert_c_point_extension_g=None, alert_c_method4_point_extension_g=None):  # noqa: E501
        """AlertCMethod4Point - a model defined in OpenAPI

        :param alert_c_location_country_code: The alert_c_location_country_code of this AlertCMethod4Point.  # noqa: E501
        :type alert_c_location_country_code: str
        :param alert_c_location_table_number: The alert_c_location_table_number of this AlertCMethod4Point.  # noqa: E501
        :type alert_c_location_table_number: str
        :param alert_c_location_table_version: The alert_c_location_table_version of this AlertCMethod4Point.  # noqa: E501
        :type alert_c_location_table_version: str
        :param alert_c_direction: The alert_c_direction of this AlertCMethod4Point.  # noqa: E501
        :type alert_c_direction: AlertCDirection
        :param alert_c_method4_primary_point_location: The alert_c_method4_primary_point_location of this AlertCMethod4Point.  # noqa: E501
        :type alert_c_method4_primary_point_location: AlertCMethod4PrimaryPointLocation
        :param alert_c_point_extension_g: The alert_c_point_extension_g of this AlertCMethod4Point.  # noqa: E501
        :type alert_c_point_extension_g: Dict[str, object]
        :param alert_c_method4_point_extension_g: The alert_c_method4_point_extension_g of this AlertCMethod4Point.  # noqa: E501
        :type alert_c_method4_point_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'alert_c_location_country_code': str,
            'alert_c_location_table_number': str,
            'alert_c_location_table_version': str,
            'alert_c_direction': AlertCDirection,
            'alert_c_method4_primary_point_location': AlertCMethod4PrimaryPointLocation,
            'alert_c_point_extension_g': Dict[str, object],
            'alert_c_method4_point_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'alert_c_location_country_code': 'alertCLocationCountryCode',
            'alert_c_location_table_number': 'alertCLocationTableNumber',
            'alert_c_location_table_version': 'alertCLocationTableVersion',
            'alert_c_direction': 'alertCDirection',
            'alert_c_method4_primary_point_location': 'alertCMethod4PrimaryPointLocation',
            'alert_c_point_extension_g': 'alertCPointExtensionG',
            'alert_c_method4_point_extension_g': 'alertCMethod4PointExtensionG'
        }

        self._alert_c_location_country_code = alert_c_location_country_code
        self._alert_c_location_table_number = alert_c_location_table_number
        self._alert_c_location_table_version = alert_c_location_table_version
        self._alert_c_direction = alert_c_direction
        self._alert_c_method4_primary_point_location = alert_c_method4_primary_point_location
        self._alert_c_point_extension_g = alert_c_point_extension_g
        self._alert_c_method4_point_extension_g = alert_c_method4_point_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'AlertCMethod4Point':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlertCMethod4Point of this AlertCMethod4Point.  # noqa: E501
        :rtype: AlertCMethod4Point
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_c_location_country_code(self) -> str:
        """Gets the alert_c_location_country_code of this AlertCMethod4Point.


        :return: The alert_c_location_country_code of this AlertCMethod4Point.
        :rtype: str
        """
        return self._alert_c_location_country_code

    @alert_c_location_country_code.setter
    def alert_c_location_country_code(self, alert_c_location_country_code: str):
        """Sets the alert_c_location_country_code of this AlertCMethod4Point.


        :param alert_c_location_country_code: The alert_c_location_country_code of this AlertCMethod4Point.
        :type alert_c_location_country_code: str
        """
        if alert_c_location_country_code is None:
            raise ValueError("Invalid value for `alert_c_location_country_code`, must not be `None`")  # noqa: E501
        if alert_c_location_country_code is not None and len(alert_c_location_country_code) > 1024:
            raise ValueError("Invalid value for `alert_c_location_country_code`, length must be less than or equal to `1024`")  # noqa: E501

        self._alert_c_location_country_code = alert_c_location_country_code

    @property
    def alert_c_location_table_number(self) -> str:
        """Gets the alert_c_location_table_number of this AlertCMethod4Point.


        :return: The alert_c_location_table_number of this AlertCMethod4Point.
        :rtype: str
        """
        return self._alert_c_location_table_number

    @alert_c_location_table_number.setter
    def alert_c_location_table_number(self, alert_c_location_table_number: str):
        """Sets the alert_c_location_table_number of this AlertCMethod4Point.


        :param alert_c_location_table_number: The alert_c_location_table_number of this AlertCMethod4Point.
        :type alert_c_location_table_number: str
        """
        if alert_c_location_table_number is None:
            raise ValueError("Invalid value for `alert_c_location_table_number`, must not be `None`")  # noqa: E501
        if alert_c_location_table_number is not None and len(alert_c_location_table_number) > 1024:
            raise ValueError("Invalid value for `alert_c_location_table_number`, length must be less than or equal to `1024`")  # noqa: E501

        self._alert_c_location_table_number = alert_c_location_table_number

    @property
    def alert_c_location_table_version(self) -> str:
        """Gets the alert_c_location_table_version of this AlertCMethod4Point.


        :return: The alert_c_location_table_version of this AlertCMethod4Point.
        :rtype: str
        """
        return self._alert_c_location_table_version

    @alert_c_location_table_version.setter
    def alert_c_location_table_version(self, alert_c_location_table_version: str):
        """Sets the alert_c_location_table_version of this AlertCMethod4Point.


        :param alert_c_location_table_version: The alert_c_location_table_version of this AlertCMethod4Point.
        :type alert_c_location_table_version: str
        """
        if alert_c_location_table_version is None:
            raise ValueError("Invalid value for `alert_c_location_table_version`, must not be `None`")  # noqa: E501
        if alert_c_location_table_version is not None and len(alert_c_location_table_version) > 1024:
            raise ValueError("Invalid value for `alert_c_location_table_version`, length must be less than or equal to `1024`")  # noqa: E501

        self._alert_c_location_table_version = alert_c_location_table_version

    @property
    def alert_c_direction(self) -> AlertCDirection:
        """Gets the alert_c_direction of this AlertCMethod4Point.


        :return: The alert_c_direction of this AlertCMethod4Point.
        :rtype: AlertCDirection
        """
        return self._alert_c_direction

    @alert_c_direction.setter
    def alert_c_direction(self, alert_c_direction: AlertCDirection):
        """Sets the alert_c_direction of this AlertCMethod4Point.


        :param alert_c_direction: The alert_c_direction of this AlertCMethod4Point.
        :type alert_c_direction: AlertCDirection
        """
        if alert_c_direction is None:
            raise ValueError("Invalid value for `alert_c_direction`, must not be `None`")  # noqa: E501

        self._alert_c_direction = alert_c_direction

    @property
    def alert_c_method4_primary_point_location(self) -> AlertCMethod4PrimaryPointLocation:
        """Gets the alert_c_method4_primary_point_location of this AlertCMethod4Point.


        :return: The alert_c_method4_primary_point_location of this AlertCMethod4Point.
        :rtype: AlertCMethod4PrimaryPointLocation
        """
        return self._alert_c_method4_primary_point_location

    @alert_c_method4_primary_point_location.setter
    def alert_c_method4_primary_point_location(self, alert_c_method4_primary_point_location: AlertCMethod4PrimaryPointLocation):
        """Sets the alert_c_method4_primary_point_location of this AlertCMethod4Point.


        :param alert_c_method4_primary_point_location: The alert_c_method4_primary_point_location of this AlertCMethod4Point.
        :type alert_c_method4_primary_point_location: AlertCMethod4PrimaryPointLocation
        """
        if alert_c_method4_primary_point_location is None:
            raise ValueError("Invalid value for `alert_c_method4_primary_point_location`, must not be `None`")  # noqa: E501

        self._alert_c_method4_primary_point_location = alert_c_method4_primary_point_location

    @property
    def alert_c_point_extension_g(self) -> Dict[str, object]:
        """Gets the alert_c_point_extension_g of this AlertCMethod4Point.


        :return: The alert_c_point_extension_g of this AlertCMethod4Point.
        :rtype: Dict[str, object]
        """
        return self._alert_c_point_extension_g

    @alert_c_point_extension_g.setter
    def alert_c_point_extension_g(self, alert_c_point_extension_g: Dict[str, object]):
        """Sets the alert_c_point_extension_g of this AlertCMethod4Point.


        :param alert_c_point_extension_g: The alert_c_point_extension_g of this AlertCMethod4Point.
        :type alert_c_point_extension_g: Dict[str, object]
        """

        self._alert_c_point_extension_g = alert_c_point_extension_g

    @property
    def alert_c_method4_point_extension_g(self) -> Dict[str, object]:
        """Gets the alert_c_method4_point_extension_g of this AlertCMethod4Point.


        :return: The alert_c_method4_point_extension_g of this AlertCMethod4Point.
        :rtype: Dict[str, object]
        """
        return self._alert_c_method4_point_extension_g

    @alert_c_method4_point_extension_g.setter
    def alert_c_method4_point_extension_g(self, alert_c_method4_point_extension_g: Dict[str, object]):
        """Sets the alert_c_method4_point_extension_g of this AlertCMethod4Point.


        :param alert_c_method4_point_extension_g: The alert_c_method4_point_extension_g of this AlertCMethod4Point.
        :type alert_c_method4_point_extension_g: Dict[str, object]
        """

        self._alert_c_method4_point_extension_g = alert_c_method4_point_extension_g
