from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.alert_c_direction import AlertCDirection
from openapi_server.models.alert_c_location import AlertCLocation
from openapi_server import util

from openapi_server.models.alert_c_direction import AlertCDirection  # noqa: E501
from openapi_server.models.alert_c_location import AlertCLocation  # noqa: E501

class AlertCLinearByCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_c_location_country_code=None, alert_c_location_table_number=None, alert_c_location_table_version=None, alert_c_direction=None, location_code_for_linear_location=None, alert_c_linear_extension_g=None, alert_c_linear_by_code_extension_g=None):  # noqa: E501
        """AlertCLinearByCode - a model defined in OpenAPI

        :param alert_c_location_country_code: The alert_c_location_country_code of this AlertCLinearByCode.  # noqa: E501
        :type alert_c_location_country_code: str
        :param alert_c_location_table_number: The alert_c_location_table_number of this AlertCLinearByCode.  # noqa: E501
        :type alert_c_location_table_number: str
        :param alert_c_location_table_version: The alert_c_location_table_version of this AlertCLinearByCode.  # noqa: E501
        :type alert_c_location_table_version: str
        :param alert_c_direction: The alert_c_direction of this AlertCLinearByCode.  # noqa: E501
        :type alert_c_direction: AlertCDirection
        :param location_code_for_linear_location: The location_code_for_linear_location of this AlertCLinearByCode.  # noqa: E501
        :type location_code_for_linear_location: AlertCLocation
        :param alert_c_linear_extension_g: The alert_c_linear_extension_g of this AlertCLinearByCode.  # noqa: E501
        :type alert_c_linear_extension_g: Dict[str, object]
        :param alert_c_linear_by_code_extension_g: The alert_c_linear_by_code_extension_g of this AlertCLinearByCode.  # noqa: E501
        :type alert_c_linear_by_code_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'alert_c_location_country_code': str,
            'alert_c_location_table_number': str,
            'alert_c_location_table_version': str,
            'alert_c_direction': AlertCDirection,
            'location_code_for_linear_location': AlertCLocation,
            'alert_c_linear_extension_g': Dict[str, object],
            'alert_c_linear_by_code_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'alert_c_location_country_code': 'alertCLocationCountryCode',
            'alert_c_location_table_number': 'alertCLocationTableNumber',
            'alert_c_location_table_version': 'alertCLocationTableVersion',
            'alert_c_direction': 'alertCDirection',
            'location_code_for_linear_location': 'locationCodeForLinearLocation',
            'alert_c_linear_extension_g': 'alertCLinearExtensionG',
            'alert_c_linear_by_code_extension_g': 'alertCLinearByCodeExtensionG'
        }

        self._alert_c_location_country_code = alert_c_location_country_code
        self._alert_c_location_table_number = alert_c_location_table_number
        self._alert_c_location_table_version = alert_c_location_table_version
        self._alert_c_direction = alert_c_direction
        self._location_code_for_linear_location = location_code_for_linear_location
        self._alert_c_linear_extension_g = alert_c_linear_extension_g
        self._alert_c_linear_by_code_extension_g = alert_c_linear_by_code_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'AlertCLinearByCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlertCLinearByCode of this AlertCLinearByCode.  # noqa: E501
        :rtype: AlertCLinearByCode
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_c_location_country_code(self) -> str:
        """Gets the alert_c_location_country_code of this AlertCLinearByCode.


        :return: The alert_c_location_country_code of this AlertCLinearByCode.
        :rtype: str
        """
        return self._alert_c_location_country_code

    @alert_c_location_country_code.setter
    def alert_c_location_country_code(self, alert_c_location_country_code: str):
        """Sets the alert_c_location_country_code of this AlertCLinearByCode.


        :param alert_c_location_country_code: The alert_c_location_country_code of this AlertCLinearByCode.
        :type alert_c_location_country_code: str
        """
        if alert_c_location_country_code is None:
            raise ValueError("Invalid value for `alert_c_location_country_code`, must not be `None`")  # noqa: E501
        if alert_c_location_country_code is not None and len(alert_c_location_country_code) > 1024:
            raise ValueError("Invalid value for `alert_c_location_country_code`, length must be less than or equal to `1024`")  # noqa: E501

        self._alert_c_location_country_code = alert_c_location_country_code

    @property
    def alert_c_location_table_number(self) -> str:
        """Gets the alert_c_location_table_number of this AlertCLinearByCode.


        :return: The alert_c_location_table_number of this AlertCLinearByCode.
        :rtype: str
        """
        return self._alert_c_location_table_number

    @alert_c_location_table_number.setter
    def alert_c_location_table_number(self, alert_c_location_table_number: str):
        """Sets the alert_c_location_table_number of this AlertCLinearByCode.


        :param alert_c_location_table_number: The alert_c_location_table_number of this AlertCLinearByCode.
        :type alert_c_location_table_number: str
        """
        if alert_c_location_table_number is None:
            raise ValueError("Invalid value for `alert_c_location_table_number`, must not be `None`")  # noqa: E501
        if alert_c_location_table_number is not None and len(alert_c_location_table_number) > 1024:
            raise ValueError("Invalid value for `alert_c_location_table_number`, length must be less than or equal to `1024`")  # noqa: E501

        self._alert_c_location_table_number = alert_c_location_table_number

    @property
    def alert_c_location_table_version(self) -> str:
        """Gets the alert_c_location_table_version of this AlertCLinearByCode.


        :return: The alert_c_location_table_version of this AlertCLinearByCode.
        :rtype: str
        """
        return self._alert_c_location_table_version

    @alert_c_location_table_version.setter
    def alert_c_location_table_version(self, alert_c_location_table_version: str):
        """Sets the alert_c_location_table_version of this AlertCLinearByCode.


        :param alert_c_location_table_version: The alert_c_location_table_version of this AlertCLinearByCode.
        :type alert_c_location_table_version: str
        """
        if alert_c_location_table_version is None:
            raise ValueError("Invalid value for `alert_c_location_table_version`, must not be `None`")  # noqa: E501
        if alert_c_location_table_version is not None and len(alert_c_location_table_version) > 1024:
            raise ValueError("Invalid value for `alert_c_location_table_version`, length must be less than or equal to `1024`")  # noqa: E501

        self._alert_c_location_table_version = alert_c_location_table_version

    @property
    def alert_c_direction(self) -> AlertCDirection:
        """Gets the alert_c_direction of this AlertCLinearByCode.


        :return: The alert_c_direction of this AlertCLinearByCode.
        :rtype: AlertCDirection
        """
        return self._alert_c_direction

    @alert_c_direction.setter
    def alert_c_direction(self, alert_c_direction: AlertCDirection):
        """Sets the alert_c_direction of this AlertCLinearByCode.


        :param alert_c_direction: The alert_c_direction of this AlertCLinearByCode.
        :type alert_c_direction: AlertCDirection
        """
        if alert_c_direction is None:
            raise ValueError("Invalid value for `alert_c_direction`, must not be `None`")  # noqa: E501

        self._alert_c_direction = alert_c_direction

    @property
    def location_code_for_linear_location(self) -> AlertCLocation:
        """Gets the location_code_for_linear_location of this AlertCLinearByCode.


        :return: The location_code_for_linear_location of this AlertCLinearByCode.
        :rtype: AlertCLocation
        """
        return self._location_code_for_linear_location

    @location_code_for_linear_location.setter
    def location_code_for_linear_location(self, location_code_for_linear_location: AlertCLocation):
        """Sets the location_code_for_linear_location of this AlertCLinearByCode.


        :param location_code_for_linear_location: The location_code_for_linear_location of this AlertCLinearByCode.
        :type location_code_for_linear_location: AlertCLocation
        """
        if location_code_for_linear_location is None:
            raise ValueError("Invalid value for `location_code_for_linear_location`, must not be `None`")  # noqa: E501

        self._location_code_for_linear_location = location_code_for_linear_location

    @property
    def alert_c_linear_extension_g(self) -> Dict[str, object]:
        """Gets the alert_c_linear_extension_g of this AlertCLinearByCode.


        :return: The alert_c_linear_extension_g of this AlertCLinearByCode.
        :rtype: Dict[str, object]
        """
        return self._alert_c_linear_extension_g

    @alert_c_linear_extension_g.setter
    def alert_c_linear_extension_g(self, alert_c_linear_extension_g: Dict[str, object]):
        """Sets the alert_c_linear_extension_g of this AlertCLinearByCode.


        :param alert_c_linear_extension_g: The alert_c_linear_extension_g of this AlertCLinearByCode.
        :type alert_c_linear_extension_g: Dict[str, object]
        """

        self._alert_c_linear_extension_g = alert_c_linear_extension_g

    @property
    def alert_c_linear_by_code_extension_g(self) -> Dict[str, object]:
        """Gets the alert_c_linear_by_code_extension_g of this AlertCLinearByCode.


        :return: The alert_c_linear_by_code_extension_g of this AlertCLinearByCode.
        :rtype: Dict[str, object]
        """
        return self._alert_c_linear_by_code_extension_g

    @alert_c_linear_by_code_extension_g.setter
    def alert_c_linear_by_code_extension_g(self, alert_c_linear_by_code_extension_g: Dict[str, object]):
        """Sets the alert_c_linear_by_code_extension_g of this AlertCLinearByCode.


        :param alert_c_linear_by_code_extension_g: The alert_c_linear_by_code_extension_g of this AlertCLinearByCode.
        :type alert_c_linear_by_code_extension_g: Dict[str, object]
        """

        self._alert_c_linear_by_code_extension_g = alert_c_linear_by_code_extension_g
