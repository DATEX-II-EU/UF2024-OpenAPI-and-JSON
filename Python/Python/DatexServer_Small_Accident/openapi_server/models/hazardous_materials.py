from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.dangerous_goods_regulations_enum_g import DangerousGoodsRegulationsEnumG
from openapi_server.models.multilingual_string import MultilingualString
from openapi_server import util

from openapi_server.models.dangerous_goods_regulations_enum_g import DangerousGoodsRegulationsEnumG  # noqa: E501
from openapi_server.models.multilingual_string import MultilingualString  # noqa: E501

class HazardousMaterials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chemical_name=None, dangerous_goods_flash_point=None, dangerous_goods_regulations=None, hazard_code_identification=None, hazard_code_version_number=None, hazard_substance_item_page_number=None, trem_card_number=None, undg_number=None, volume_of_dangerous_goods=None, weight_of_dangerous_goods=None, hazardous_materials_extension_g=None):  # noqa: E501
        """HazardousMaterials - a model defined in OpenAPI

        :param chemical_name: The chemical_name of this HazardousMaterials.  # noqa: E501
        :type chemical_name: MultilingualString
        :param dangerous_goods_flash_point: The dangerous_goods_flash_point of this HazardousMaterials.  # noqa: E501
        :type dangerous_goods_flash_point: float
        :param dangerous_goods_regulations: The dangerous_goods_regulations of this HazardousMaterials.  # noqa: E501
        :type dangerous_goods_regulations: DangerousGoodsRegulationsEnumG
        :param hazard_code_identification: The hazard_code_identification of this HazardousMaterials.  # noqa: E501
        :type hazard_code_identification: str
        :param hazard_code_version_number: The hazard_code_version_number of this HazardousMaterials.  # noqa: E501
        :type hazard_code_version_number: int
        :param hazard_substance_item_page_number: The hazard_substance_item_page_number of this HazardousMaterials.  # noqa: E501
        :type hazard_substance_item_page_number: str
        :param trem_card_number: The trem_card_number of this HazardousMaterials.  # noqa: E501
        :type trem_card_number: str
        :param undg_number: The undg_number of this HazardousMaterials.  # noqa: E501
        :type undg_number: str
        :param volume_of_dangerous_goods: The volume_of_dangerous_goods of this HazardousMaterials.  # noqa: E501
        :type volume_of_dangerous_goods: float
        :param weight_of_dangerous_goods: The weight_of_dangerous_goods of this HazardousMaterials.  # noqa: E501
        :type weight_of_dangerous_goods: float
        :param hazardous_materials_extension_g: The hazardous_materials_extension_g of this HazardousMaterials.  # noqa: E501
        :type hazardous_materials_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'chemical_name': MultilingualString,
            'dangerous_goods_flash_point': float,
            'dangerous_goods_regulations': DangerousGoodsRegulationsEnumG,
            'hazard_code_identification': str,
            'hazard_code_version_number': int,
            'hazard_substance_item_page_number': str,
            'trem_card_number': str,
            'undg_number': str,
            'volume_of_dangerous_goods': float,
            'weight_of_dangerous_goods': float,
            'hazardous_materials_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'chemical_name': 'chemicalName',
            'dangerous_goods_flash_point': 'dangerousGoodsFlashPoint',
            'dangerous_goods_regulations': 'dangerousGoodsRegulations',
            'hazard_code_identification': 'hazardCodeIdentification',
            'hazard_code_version_number': 'hazardCodeVersionNumber',
            'hazard_substance_item_page_number': 'hazardSubstanceItemPageNumber',
            'trem_card_number': 'tremCardNumber',
            'undg_number': 'undgNumber',
            'volume_of_dangerous_goods': 'volumeOfDangerousGoods',
            'weight_of_dangerous_goods': 'weightOfDangerousGoods',
            'hazardous_materials_extension_g': 'hazardousMaterialsExtensionG'
        }

        self._chemical_name = chemical_name
        self._dangerous_goods_flash_point = dangerous_goods_flash_point
        self._dangerous_goods_regulations = dangerous_goods_regulations
        self._hazard_code_identification = hazard_code_identification
        self._hazard_code_version_number = hazard_code_version_number
        self._hazard_substance_item_page_number = hazard_substance_item_page_number
        self._trem_card_number = trem_card_number
        self._undg_number = undg_number
        self._volume_of_dangerous_goods = volume_of_dangerous_goods
        self._weight_of_dangerous_goods = weight_of_dangerous_goods
        self._hazardous_materials_extension_g = hazardous_materials_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'HazardousMaterials':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HazardousMaterials of this HazardousMaterials.  # noqa: E501
        :rtype: HazardousMaterials
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chemical_name(self) -> MultilingualString:
        """Gets the chemical_name of this HazardousMaterials.


        :return: The chemical_name of this HazardousMaterials.
        :rtype: MultilingualString
        """
        return self._chemical_name

    @chemical_name.setter
    def chemical_name(self, chemical_name: MultilingualString):
        """Sets the chemical_name of this HazardousMaterials.


        :param chemical_name: The chemical_name of this HazardousMaterials.
        :type chemical_name: MultilingualString
        """
        if chemical_name is None:
            raise ValueError("Invalid value for `chemical_name`, must not be `None`")  # noqa: E501

        self._chemical_name = chemical_name

    @property
    def dangerous_goods_flash_point(self) -> float:
        """Gets the dangerous_goods_flash_point of this HazardousMaterials.


        :return: The dangerous_goods_flash_point of this HazardousMaterials.
        :rtype: float
        """
        return self._dangerous_goods_flash_point

    @dangerous_goods_flash_point.setter
    def dangerous_goods_flash_point(self, dangerous_goods_flash_point: float):
        """Sets the dangerous_goods_flash_point of this HazardousMaterials.


        :param dangerous_goods_flash_point: The dangerous_goods_flash_point of this HazardousMaterials.
        :type dangerous_goods_flash_point: float
        """

        self._dangerous_goods_flash_point = dangerous_goods_flash_point

    @property
    def dangerous_goods_regulations(self) -> DangerousGoodsRegulationsEnumG:
        """Gets the dangerous_goods_regulations of this HazardousMaterials.


        :return: The dangerous_goods_regulations of this HazardousMaterials.
        :rtype: DangerousGoodsRegulationsEnumG
        """
        return self._dangerous_goods_regulations

    @dangerous_goods_regulations.setter
    def dangerous_goods_regulations(self, dangerous_goods_regulations: DangerousGoodsRegulationsEnumG):
        """Sets the dangerous_goods_regulations of this HazardousMaterials.


        :param dangerous_goods_regulations: The dangerous_goods_regulations of this HazardousMaterials.
        :type dangerous_goods_regulations: DangerousGoodsRegulationsEnumG
        """

        self._dangerous_goods_regulations = dangerous_goods_regulations

    @property
    def hazard_code_identification(self) -> str:
        """Gets the hazard_code_identification of this HazardousMaterials.


        :return: The hazard_code_identification of this HazardousMaterials.
        :rtype: str
        """
        return self._hazard_code_identification

    @hazard_code_identification.setter
    def hazard_code_identification(self, hazard_code_identification: str):
        """Sets the hazard_code_identification of this HazardousMaterials.


        :param hazard_code_identification: The hazard_code_identification of this HazardousMaterials.
        :type hazard_code_identification: str
        """
        if hazard_code_identification is not None and len(hazard_code_identification) > 1024:
            raise ValueError("Invalid value for `hazard_code_identification`, length must be less than or equal to `1024`")  # noqa: E501

        self._hazard_code_identification = hazard_code_identification

    @property
    def hazard_code_version_number(self) -> int:
        """Gets the hazard_code_version_number of this HazardousMaterials.


        :return: The hazard_code_version_number of this HazardousMaterials.
        :rtype: int
        """
        return self._hazard_code_version_number

    @hazard_code_version_number.setter
    def hazard_code_version_number(self, hazard_code_version_number: int):
        """Sets the hazard_code_version_number of this HazardousMaterials.


        :param hazard_code_version_number: The hazard_code_version_number of this HazardousMaterials.
        :type hazard_code_version_number: int
        """
        if hazard_code_version_number is not None and hazard_code_version_number < 0:  # noqa: E501
            raise ValueError("Invalid value for `hazard_code_version_number`, must be a value greater than or equal to `0`")  # noqa: E501

        self._hazard_code_version_number = hazard_code_version_number

    @property
    def hazard_substance_item_page_number(self) -> str:
        """Gets the hazard_substance_item_page_number of this HazardousMaterials.


        :return: The hazard_substance_item_page_number of this HazardousMaterials.
        :rtype: str
        """
        return self._hazard_substance_item_page_number

    @hazard_substance_item_page_number.setter
    def hazard_substance_item_page_number(self, hazard_substance_item_page_number: str):
        """Sets the hazard_substance_item_page_number of this HazardousMaterials.


        :param hazard_substance_item_page_number: The hazard_substance_item_page_number of this HazardousMaterials.
        :type hazard_substance_item_page_number: str
        """
        if hazard_substance_item_page_number is not None and len(hazard_substance_item_page_number) > 1024:
            raise ValueError("Invalid value for `hazard_substance_item_page_number`, length must be less than or equal to `1024`")  # noqa: E501

        self._hazard_substance_item_page_number = hazard_substance_item_page_number

    @property
    def trem_card_number(self) -> str:
        """Gets the trem_card_number of this HazardousMaterials.


        :return: The trem_card_number of this HazardousMaterials.
        :rtype: str
        """
        return self._trem_card_number

    @trem_card_number.setter
    def trem_card_number(self, trem_card_number: str):
        """Sets the trem_card_number of this HazardousMaterials.


        :param trem_card_number: The trem_card_number of this HazardousMaterials.
        :type trem_card_number: str
        """
        if trem_card_number is not None and len(trem_card_number) > 1024:
            raise ValueError("Invalid value for `trem_card_number`, length must be less than or equal to `1024`")  # noqa: E501

        self._trem_card_number = trem_card_number

    @property
    def undg_number(self) -> str:
        """Gets the undg_number of this HazardousMaterials.


        :return: The undg_number of this HazardousMaterials.
        :rtype: str
        """
        return self._undg_number

    @undg_number.setter
    def undg_number(self, undg_number: str):
        """Sets the undg_number of this HazardousMaterials.


        :param undg_number: The undg_number of this HazardousMaterials.
        :type undg_number: str
        """
        if undg_number is not None and len(undg_number) > 1024:
            raise ValueError("Invalid value for `undg_number`, length must be less than or equal to `1024`")  # noqa: E501

        self._undg_number = undg_number

    @property
    def volume_of_dangerous_goods(self) -> float:
        """Gets the volume_of_dangerous_goods of this HazardousMaterials.


        :return: The volume_of_dangerous_goods of this HazardousMaterials.
        :rtype: float
        """
        return self._volume_of_dangerous_goods

    @volume_of_dangerous_goods.setter
    def volume_of_dangerous_goods(self, volume_of_dangerous_goods: float):
        """Sets the volume_of_dangerous_goods of this HazardousMaterials.


        :param volume_of_dangerous_goods: The volume_of_dangerous_goods of this HazardousMaterials.
        :type volume_of_dangerous_goods: float
        """

        self._volume_of_dangerous_goods = volume_of_dangerous_goods

    @property
    def weight_of_dangerous_goods(self) -> float:
        """Gets the weight_of_dangerous_goods of this HazardousMaterials.


        :return: The weight_of_dangerous_goods of this HazardousMaterials.
        :rtype: float
        """
        return self._weight_of_dangerous_goods

    @weight_of_dangerous_goods.setter
    def weight_of_dangerous_goods(self, weight_of_dangerous_goods: float):
        """Sets the weight_of_dangerous_goods of this HazardousMaterials.


        :param weight_of_dangerous_goods: The weight_of_dangerous_goods of this HazardousMaterials.
        :type weight_of_dangerous_goods: float
        """

        self._weight_of_dangerous_goods = weight_of_dangerous_goods

    @property
    def hazardous_materials_extension_g(self) -> Dict[str, object]:
        """Gets the hazardous_materials_extension_g of this HazardousMaterials.


        :return: The hazardous_materials_extension_g of this HazardousMaterials.
        :rtype: Dict[str, object]
        """
        return self._hazardous_materials_extension_g

    @hazardous_materials_extension_g.setter
    def hazardous_materials_extension_g(self, hazardous_materials_extension_g: Dict[str, object]):
        """Sets the hazardous_materials_extension_g of this HazardousMaterials.


        :param hazardous_materials_extension_g: The hazardous_materials_extension_g of this HazardousMaterials.
        :type hazardous_materials_extension_g: Dict[str, object]
        """

        self._hazardous_materials_extension_g = hazardous_materials_extension_g
