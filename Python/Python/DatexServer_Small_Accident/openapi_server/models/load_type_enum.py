from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class LoadTypeEnum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ABNORMALLOAD = 'abnormalLoad'
    AMMUNITION = 'ammunition'
    CHEMICALS = 'chemicals'
    COMBUSTIBLEMATERIALS = 'combustibleMaterials'
    CORROSIVEMATERIALS = 'corrosiveMaterials'
    DEBRIS = 'debris'
    EMPTY = 'empty'
    EXPLOSIVEMATERIALS = 'explosiveMaterials'
    EXTRAHIGHLOAD = 'extraHighLoad'
    EXTRALONGLOAD = 'extraLongLoad'
    EXTRAWIDELOAD = 'extraWideLoad'
    FUEL = 'fuel'
    GLASS = 'glass'
    GOODS = 'goods'
    HAZARDOUSMATERIALS = 'hazardousMaterials'
    LIQUID = 'liquid'
    LIVESTOCK = 'livestock'
    MATERIALS = 'materials'
    MATERIALSDANGEROUSFORPEOPLE = 'materialsDangerousForPeople'
    MATERIALSDANGEROUSFORTHEENVIRONMENT = 'materialsDangerousForTheEnvironment'
    MATERIALSDANGEROUSFORWATER = 'materialsDangerousForWater'
    OIL = 'oil'
    ORDINARY = 'ordinary'
    PERISHABLEPRODUCTS = 'perishableProducts'
    PETROL = 'petrol'
    PHARMACEUTICALMATERIALS = 'pharmaceuticalMaterials'
    RADIOACTIVEMATERIALS = 'radioactiveMaterials'
    REFRIGERATEDGOODS = 'refrigeratedGoods'
    REFUSE = 'refuse'
    TOXICMATERIALS = 'toxicMaterials'
    VEHICLES = 'vehicles'
    OTHER = 'other'
    EXTENDEDG = 'extendedG'
    def __init__(self):  # noqa: E501
        """LoadTypeEnum - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'LoadTypeEnum':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LoadTypeEnum of this LoadTypeEnum.  # noqa: E501
        :rtype: LoadTypeEnum
        """
        return util.deserialize_model(dikt, cls)
