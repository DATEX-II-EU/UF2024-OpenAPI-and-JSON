from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class VehicleTypeEnum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AGRICULTURALVEHICLE = 'agriculturalVehicle'
    ANYVEHICLE = 'anyVehicle'
    ARTICULATEDBUS = 'articulatedBus'
    ARTICULATEDTROLLEYBUS = 'articulatedTrolleyBus'
    ARTICULATEDVEHICLE = 'articulatedVehicle'
    BICYCLE = 'bicycle'
    BUS = 'bus'
    CAR = 'car'
    CARAVAN = 'caravan'
    CARORLIGHTVEHICLE = 'carOrLightVehicle'
    CARWITHCARAVAN = 'carWithCaravan'
    CARWITHTRAILER = 'carWithTrailer'
    CONSTRUCTIONORMAINTENANCEVEHICLE = 'constructionOrMaintenanceVehicle'
    FOURWHEELDRIVE = 'fourWheelDrive'
    HEAVYGOODSVEHICLE = 'heavyGoodsVehicle'
    HEAVYGOODSVEHICLEWITHTRAILER = 'heavyGoodsVehicleWithTrailer'
    HEAVYDUTYTRANSPORTER = 'heavyDutyTransporter'
    HEAVYVEHICLE = 'heavyVehicle'
    HIGHSIDEDVEHICLE = 'highSidedVehicle'
    LIGHTCOMMERCIALVEHICLE = 'lightCommercialVehicle'
    LARGECAR = 'largeCar'
    LARGEGOODSVEHICLE = 'largeGoodsVehicle'
    LIGHTCOMMERCIALVEHICLEWITHTRAILER = 'lightCommercialVehicleWithTrailer'
    LONGHEAVYLORRY = 'longHeavyLorry'
    LORRY = 'lorry'
    METRO = 'metro'
    MINIBUS = 'minibus'
    MOPED = 'moped'
    MOTORCYCLE = 'motorcycle'
    MOTORCYCLEWITHSIDECAR = 'motorcycleWithSideCar'
    MOTORHOME = 'motorhome'
    MOTORSCOOTER = 'motorscooter'
    PASSENGERCAR = 'passengerCar'
    SMALLCAR = 'smallCar'
    TANKER = 'tanker'
    THREEWHEELEDVEHICLE = 'threeWheeledVehicle'
    TRAILER = 'trailer'
    TRAM = 'tram'
    TROLLEYBUS = 'trolleyBus'
    TWOWHEELEDVEHICLE = 'twoWheeledVehicle'
    VAN = 'van'
    VEHICLEWITHCARAVAN = 'vehicleWithCaravan'
    VEHICLEWITHCATALYTICCONVERTER = 'vehicleWithCatalyticConverter'
    VEHICLEWITHOUTCATALYTICCONVERTER = 'vehicleWithoutCatalyticConverter'
    VEHICLEWITHTRAILER = 'vehicleWithTrailer'
    WITHEVENNUMBEREDREGISTRATIONPLATES = 'withEvenNumberedRegistrationPlates'
    WITHODDNUMBEREDREGISTRATIONPLATES = 'withOddNumberedRegistrationPlates'
    UNKNOWN = 'unknown'
    OTHER = 'other'
    EXTENDEDG = 'extendedG'
    def __init__(self):  # noqa: E501
        """VehicleTypeEnum - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'VehicleTypeEnum':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VehicleTypeEnum of this VehicleTypeEnum.  # noqa: E501
        :rtype: VehicleTypeEnum
        """
        return util.deserialize_model(dikt, cls)
