from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.information_status_enum_g import InformationStatusEnumG
from openapi_server import util

from openapi_server.models.information_status_enum_g import InformationStatusEnumG  # noqa: E501

class HeaderInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, information_status=None, header_information_extension_g=None):  # noqa: E501
        """HeaderInformation - a model defined in OpenAPI

        :param information_status: The information_status of this HeaderInformation.  # noqa: E501
        :type information_status: InformationStatusEnumG
        :param header_information_extension_g: The header_information_extension_g of this HeaderInformation.  # noqa: E501
        :type header_information_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'information_status': InformationStatusEnumG,
            'header_information_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'information_status': 'informationStatus',
            'header_information_extension_g': 'headerInformationExtensionG'
        }

        self._information_status = information_status
        self._header_information_extension_g = header_information_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'HeaderInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HeaderInformation of this HeaderInformation.  # noqa: E501
        :rtype: HeaderInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def information_status(self) -> InformationStatusEnumG:
        """Gets the information_status of this HeaderInformation.


        :return: The information_status of this HeaderInformation.
        :rtype: InformationStatusEnumG
        """
        return self._information_status

    @information_status.setter
    def information_status(self, information_status: InformationStatusEnumG):
        """Sets the information_status of this HeaderInformation.


        :param information_status: The information_status of this HeaderInformation.
        :type information_status: InformationStatusEnumG
        """
        if information_status is None:
            raise ValueError("Invalid value for `information_status`, must not be `None`")  # noqa: E501

        self._information_status = information_status

    @property
    def header_information_extension_g(self) -> Dict[str, object]:
        """Gets the header_information_extension_g of this HeaderInformation.


        :return: The header_information_extension_g of this HeaderInformation.
        :rtype: Dict[str, object]
        """
        return self._header_information_extension_g

    @header_information_extension_g.setter
    def header_information_extension_g(self, header_information_extension_g: Dict[str, object]):
        """Sets the header_information_extension_g of this HeaderInformation.


        :param header_information_extension_g: The header_information_extension_g of this HeaderInformation.
        :type header_information_extension_g: Dict[str, object]
        """

        self._header_information_extension_g = header_information_extension_g
