from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.linear_location import LinearLocation
from openapi_server.models.point_location import PointLocation
from openapi_server.models.single_road_linear_location import SingleRoadLinearLocation
from openapi_server import util

from openapi_server.models.linear_location import LinearLocation  # noqa: E501
from openapi_server.models.point_location import PointLocation  # noqa: E501
from openapi_server.models.single_road_linear_location import SingleRoadLinearLocation  # noqa: E501

class LocationReferenceG(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, loc_linear_location=None, loc_single_road_linear_location=None, loc_point_location=None):  # noqa: E501
        """LocationReferenceG - a model defined in OpenAPI

        :param loc_linear_location: The loc_linear_location of this LocationReferenceG.  # noqa: E501
        :type loc_linear_location: LinearLocation
        :param loc_single_road_linear_location: The loc_single_road_linear_location of this LocationReferenceG.  # noqa: E501
        :type loc_single_road_linear_location: SingleRoadLinearLocation
        :param loc_point_location: The loc_point_location of this LocationReferenceG.  # noqa: E501
        :type loc_point_location: PointLocation
        """
        self.openapi_types = {
            'loc_linear_location': LinearLocation,
            'loc_single_road_linear_location': SingleRoadLinearLocation,
            'loc_point_location': PointLocation
        }

        self.attribute_map = {
            'loc_linear_location': 'locLinearLocation',
            'loc_single_road_linear_location': 'locSingleRoadLinearLocation',
            'loc_point_location': 'locPointLocation'
        }

        self._loc_linear_location = loc_linear_location
        self._loc_single_road_linear_location = loc_single_road_linear_location
        self._loc_point_location = loc_point_location

    @classmethod
    def from_dict(cls, dikt) -> 'LocationReferenceG':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LocationReferenceG of this LocationReferenceG.  # noqa: E501
        :rtype: LocationReferenceG
        """
        return util.deserialize_model(dikt, cls)

    @property
    def loc_linear_location(self) -> LinearLocation:
        """Gets the loc_linear_location of this LocationReferenceG.


        :return: The loc_linear_location of this LocationReferenceG.
        :rtype: LinearLocation
        """
        return self._loc_linear_location

    @loc_linear_location.setter
    def loc_linear_location(self, loc_linear_location: LinearLocation):
        """Sets the loc_linear_location of this LocationReferenceG.


        :param loc_linear_location: The loc_linear_location of this LocationReferenceG.
        :type loc_linear_location: LinearLocation
        """

        self._loc_linear_location = loc_linear_location

    @property
    def loc_single_road_linear_location(self) -> SingleRoadLinearLocation:
        """Gets the loc_single_road_linear_location of this LocationReferenceG.


        :return: The loc_single_road_linear_location of this LocationReferenceG.
        :rtype: SingleRoadLinearLocation
        """
        return self._loc_single_road_linear_location

    @loc_single_road_linear_location.setter
    def loc_single_road_linear_location(self, loc_single_road_linear_location: SingleRoadLinearLocation):
        """Sets the loc_single_road_linear_location of this LocationReferenceG.


        :param loc_single_road_linear_location: The loc_single_road_linear_location of this LocationReferenceG.
        :type loc_single_road_linear_location: SingleRoadLinearLocation
        """

        self._loc_single_road_linear_location = loc_single_road_linear_location

    @property
    def loc_point_location(self) -> PointLocation:
        """Gets the loc_point_location of this LocationReferenceG.


        :return: The loc_point_location of this LocationReferenceG.
        :rtype: PointLocation
        """
        return self._loc_point_location

    @loc_point_location.setter
    def loc_point_location(self, loc_point_location: PointLocation):
        """Sets the loc_point_location of this LocationReferenceG.


        :param loc_point_location: The loc_point_location of this LocationReferenceG.
        :type loc_point_location: PointLocation
        """

        self._loc_point_location = loc_point_location
