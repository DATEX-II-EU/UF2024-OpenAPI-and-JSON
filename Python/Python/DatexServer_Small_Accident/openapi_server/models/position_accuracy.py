from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PositionAccuracy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accuracy_percentile50=None, accuracy_percentile75=None, accuracy_percentile95=None, position_accuracy_extension_g=None):  # noqa: E501
        """PositionAccuracy - a model defined in OpenAPI

        :param accuracy_percentile50: The accuracy_percentile50 of this PositionAccuracy.  # noqa: E501
        :type accuracy_percentile50: float
        :param accuracy_percentile75: The accuracy_percentile75 of this PositionAccuracy.  # noqa: E501
        :type accuracy_percentile75: float
        :param accuracy_percentile95: The accuracy_percentile95 of this PositionAccuracy.  # noqa: E501
        :type accuracy_percentile95: float
        :param position_accuracy_extension_g: The position_accuracy_extension_g of this PositionAccuracy.  # noqa: E501
        :type position_accuracy_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'accuracy_percentile50': float,
            'accuracy_percentile75': float,
            'accuracy_percentile95': float,
            'position_accuracy_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'accuracy_percentile50': 'accuracyPercentile50',
            'accuracy_percentile75': 'accuracyPercentile75',
            'accuracy_percentile95': 'accuracyPercentile95',
            'position_accuracy_extension_g': 'positionAccuracyExtensionG'
        }

        self._accuracy_percentile50 = accuracy_percentile50
        self._accuracy_percentile75 = accuracy_percentile75
        self._accuracy_percentile95 = accuracy_percentile95
        self._position_accuracy_extension_g = position_accuracy_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'PositionAccuracy':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PositionAccuracy of this PositionAccuracy.  # noqa: E501
        :rtype: PositionAccuracy
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accuracy_percentile50(self) -> float:
        """Gets the accuracy_percentile50 of this PositionAccuracy.


        :return: The accuracy_percentile50 of this PositionAccuracy.
        :rtype: float
        """
        return self._accuracy_percentile50

    @accuracy_percentile50.setter
    def accuracy_percentile50(self, accuracy_percentile50: float):
        """Sets the accuracy_percentile50 of this PositionAccuracy.


        :param accuracy_percentile50: The accuracy_percentile50 of this PositionAccuracy.
        :type accuracy_percentile50: float
        """

        self._accuracy_percentile50 = accuracy_percentile50

    @property
    def accuracy_percentile75(self) -> float:
        """Gets the accuracy_percentile75 of this PositionAccuracy.


        :return: The accuracy_percentile75 of this PositionAccuracy.
        :rtype: float
        """
        return self._accuracy_percentile75

    @accuracy_percentile75.setter
    def accuracy_percentile75(self, accuracy_percentile75: float):
        """Sets the accuracy_percentile75 of this PositionAccuracy.


        :param accuracy_percentile75: The accuracy_percentile75 of this PositionAccuracy.
        :type accuracy_percentile75: float
        """

        self._accuracy_percentile75 = accuracy_percentile75

    @property
    def accuracy_percentile95(self) -> float:
        """Gets the accuracy_percentile95 of this PositionAccuracy.


        :return: The accuracy_percentile95 of this PositionAccuracy.
        :rtype: float
        """
        return self._accuracy_percentile95

    @accuracy_percentile95.setter
    def accuracy_percentile95(self, accuracy_percentile95: float):
        """Sets the accuracy_percentile95 of this PositionAccuracy.


        :param accuracy_percentile95: The accuracy_percentile95 of this PositionAccuracy.
        :type accuracy_percentile95: float
        """

        self._accuracy_percentile95 = accuracy_percentile95

    @property
    def position_accuracy_extension_g(self) -> Dict[str, object]:
        """Gets the position_accuracy_extension_g of this PositionAccuracy.


        :return: The position_accuracy_extension_g of this PositionAccuracy.
        :rtype: Dict[str, object]
        """
        return self._position_accuracy_extension_g

    @position_accuracy_extension_g.setter
    def position_accuracy_extension_g(self, position_accuracy_extension_g: Dict[str, object]):
        """Sets the position_accuracy_extension_g of this PositionAccuracy.


        :param position_accuracy_extension_g: The position_accuracy_extension_g of this PositionAccuracy.
        :type position_accuracy_extension_g: Dict[str, object]
        """

        self._position_accuracy_extension_g = position_accuracy_extension_g
