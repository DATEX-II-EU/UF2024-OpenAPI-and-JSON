from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class OverallPeriod(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, overall_start_time=None, overall_end_time=None, overall_period_extension_g=None):  # noqa: E501
        """OverallPeriod - a model defined in OpenAPI

        :param overall_start_time: The overall_start_time of this OverallPeriod.  # noqa: E501
        :type overall_start_time: datetime
        :param overall_end_time: The overall_end_time of this OverallPeriod.  # noqa: E501
        :type overall_end_time: datetime
        :param overall_period_extension_g: The overall_period_extension_g of this OverallPeriod.  # noqa: E501
        :type overall_period_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'overall_start_time': datetime,
            'overall_end_time': datetime,
            'overall_period_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'overall_start_time': 'overallStartTime',
            'overall_end_time': 'overallEndTime',
            'overall_period_extension_g': 'overallPeriodExtensionG'
        }

        self._overall_start_time = overall_start_time
        self._overall_end_time = overall_end_time
        self._overall_period_extension_g = overall_period_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'OverallPeriod':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OverallPeriod of this OverallPeriod.  # noqa: E501
        :rtype: OverallPeriod
        """
        return util.deserialize_model(dikt, cls)

    @property
    def overall_start_time(self) -> datetime:
        """Gets the overall_start_time of this OverallPeriod.


        :return: The overall_start_time of this OverallPeriod.
        :rtype: datetime
        """
        return self._overall_start_time

    @overall_start_time.setter
    def overall_start_time(self, overall_start_time: datetime):
        """Sets the overall_start_time of this OverallPeriod.


        :param overall_start_time: The overall_start_time of this OverallPeriod.
        :type overall_start_time: datetime
        """
        if overall_start_time is None:
            raise ValueError("Invalid value for `overall_start_time`, must not be `None`")  # noqa: E501

        self._overall_start_time = overall_start_time

    @property
    def overall_end_time(self) -> datetime:
        """Gets the overall_end_time of this OverallPeriod.


        :return: The overall_end_time of this OverallPeriod.
        :rtype: datetime
        """
        return self._overall_end_time

    @overall_end_time.setter
    def overall_end_time(self, overall_end_time: datetime):
        """Sets the overall_end_time of this OverallPeriod.


        :param overall_end_time: The overall_end_time of this OverallPeriod.
        :type overall_end_time: datetime
        """

        self._overall_end_time = overall_end_time

    @property
    def overall_period_extension_g(self) -> Dict[str, object]:
        """Gets the overall_period_extension_g of this OverallPeriod.


        :return: The overall_period_extension_g of this OverallPeriod.
        :rtype: Dict[str, object]
        """
        return self._overall_period_extension_g

    @overall_period_extension_g.setter
    def overall_period_extension_g(self, overall_period_extension_g: Dict[str, object]):
        """Sets the overall_period_extension_g of this OverallPeriod.


        :param overall_period_extension_g: The overall_period_extension_g of this OverallPeriod.
        :type overall_period_extension_g: Dict[str, object]
        """

        self._overall_period_extension_g = overall_period_extension_g
