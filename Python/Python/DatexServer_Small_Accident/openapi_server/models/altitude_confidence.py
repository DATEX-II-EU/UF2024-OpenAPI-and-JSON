from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.altitude_accuracy_enum_g import AltitudeAccuracyEnumG
from openapi_server.models.position_confidence_coded_error_enum_g import PositionConfidenceCodedErrorEnumG
from openapi_server import util

from openapi_server.models.altitude_accuracy_enum_g import AltitudeAccuracyEnumG  # noqa: E501
from openapi_server.models.position_confidence_coded_error_enum_g import PositionConfidenceCodedErrorEnumG  # noqa: E501

class AltitudeConfidence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, altitude_accuracy_coded_value=None, altitude_accuracy_coded_error=None, altitude_confidence_extension_g=None):  # noqa: E501
        """AltitudeConfidence - a model defined in OpenAPI

        :param altitude_accuracy_coded_value: The altitude_accuracy_coded_value of this AltitudeConfidence.  # noqa: E501
        :type altitude_accuracy_coded_value: AltitudeAccuracyEnumG
        :param altitude_accuracy_coded_error: The altitude_accuracy_coded_error of this AltitudeConfidence.  # noqa: E501
        :type altitude_accuracy_coded_error: PositionConfidenceCodedErrorEnumG
        :param altitude_confidence_extension_g: The altitude_confidence_extension_g of this AltitudeConfidence.  # noqa: E501
        :type altitude_confidence_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'altitude_accuracy_coded_value': AltitudeAccuracyEnumG,
            'altitude_accuracy_coded_error': PositionConfidenceCodedErrorEnumG,
            'altitude_confidence_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'altitude_accuracy_coded_value': 'altitudeAccuracyCodedValue',
            'altitude_accuracy_coded_error': 'altitudeAccuracyCodedError',
            'altitude_confidence_extension_g': 'altitudeConfidenceExtensionG'
        }

        self._altitude_accuracy_coded_value = altitude_accuracy_coded_value
        self._altitude_accuracy_coded_error = altitude_accuracy_coded_error
        self._altitude_confidence_extension_g = altitude_confidence_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'AltitudeConfidence':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AltitudeConfidence of this AltitudeConfidence.  # noqa: E501
        :rtype: AltitudeConfidence
        """
        return util.deserialize_model(dikt, cls)

    @property
    def altitude_accuracy_coded_value(self) -> AltitudeAccuracyEnumG:
        """Gets the altitude_accuracy_coded_value of this AltitudeConfidence.


        :return: The altitude_accuracy_coded_value of this AltitudeConfidence.
        :rtype: AltitudeAccuracyEnumG
        """
        return self._altitude_accuracy_coded_value

    @altitude_accuracy_coded_value.setter
    def altitude_accuracy_coded_value(self, altitude_accuracy_coded_value: AltitudeAccuracyEnumG):
        """Sets the altitude_accuracy_coded_value of this AltitudeConfidence.


        :param altitude_accuracy_coded_value: The altitude_accuracy_coded_value of this AltitudeConfidence.
        :type altitude_accuracy_coded_value: AltitudeAccuracyEnumG
        """

        self._altitude_accuracy_coded_value = altitude_accuracy_coded_value

    @property
    def altitude_accuracy_coded_error(self) -> PositionConfidenceCodedErrorEnumG:
        """Gets the altitude_accuracy_coded_error of this AltitudeConfidence.


        :return: The altitude_accuracy_coded_error of this AltitudeConfidence.
        :rtype: PositionConfidenceCodedErrorEnumG
        """
        return self._altitude_accuracy_coded_error

    @altitude_accuracy_coded_error.setter
    def altitude_accuracy_coded_error(self, altitude_accuracy_coded_error: PositionConfidenceCodedErrorEnumG):
        """Sets the altitude_accuracy_coded_error of this AltitudeConfidence.


        :param altitude_accuracy_coded_error: The altitude_accuracy_coded_error of this AltitudeConfidence.
        :type altitude_accuracy_coded_error: PositionConfidenceCodedErrorEnumG
        """

        self._altitude_accuracy_coded_error = altitude_accuracy_coded_error

    @property
    def altitude_confidence_extension_g(self) -> Dict[str, object]:
        """Gets the altitude_confidence_extension_g of this AltitudeConfidence.


        :return: The altitude_confidence_extension_g of this AltitudeConfidence.
        :rtype: Dict[str, object]
        """
        return self._altitude_confidence_extension_g

    @altitude_confidence_extension_g.setter
    def altitude_confidence_extension_g(self, altitude_confidence_extension_g: Dict[str, object]):
        """Sets the altitude_confidence_extension_g of this AltitudeConfidence.


        :param altitude_confidence_extension_g: The altitude_confidence_extension_g of this AltitudeConfidence.
        :type altitude_confidence_extension_g: Dict[str, object]
        """

        self._altitude_confidence_extension_g = altitude_confidence_extension_g
