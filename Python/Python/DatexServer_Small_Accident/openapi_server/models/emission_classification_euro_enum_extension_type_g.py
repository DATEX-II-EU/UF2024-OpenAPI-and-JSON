from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class EmissionClassificationEuroEnumExtensionTypeG(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    EURO0 = 'euro0'
    EURO1 = 'euro1'
    EURO2 = 'euro2'
    EURO3 = 'euro3'
    EURO4 = 'euro4'
    EURO6D = 'euro6d'
    EURO6DTEMP = 'euro6dTemp'
    EUROIV = 'euroIV'
    EUROUNKNOWN = 'euroUnknown'
    EUROI = 'euroI'
    EUROII = 'euroII'
    EUROIII = 'euroIII'
    def __init__(self):  # noqa: E501
        """EmissionClassificationEuroEnumExtensionTypeG - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'EmissionClassificationEuroEnumExtensionTypeG':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmissionClassificationEuroEnumExtensionTypeG of this EmissionClassificationEuroEnumExtensionTypeG.  # noqa: E501
        :rtype: EmissionClassificationEuroEnumExtensionTypeG
        """
        return util.deserialize_model(dikt, cls)
