from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.position_confidence_coded_error_enum_g import PositionConfidenceCodedErrorEnumG
from openapi_server import util

from openapi_server.models.position_confidence_coded_error_enum_g import PositionConfidenceCodedErrorEnumG  # noqa: E501

class PositionConfidenceEllipse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, semi_major_axis_length=None, semi_major_axis_length_coded_error=None, semi_minor_axis_length=None, semi_minor_axis_length_coded_error=None, semi_major_axis_orientation=None, semi_major_axis_orientation_error=None, position_confidence_ellipse_extension_g=None):  # noqa: E501
        """PositionConfidenceEllipse - a model defined in OpenAPI

        :param semi_major_axis_length: The semi_major_axis_length of this PositionConfidenceEllipse.  # noqa: E501
        :type semi_major_axis_length: float
        :param semi_major_axis_length_coded_error: The semi_major_axis_length_coded_error of this PositionConfidenceEllipse.  # noqa: E501
        :type semi_major_axis_length_coded_error: PositionConfidenceCodedErrorEnumG
        :param semi_minor_axis_length: The semi_minor_axis_length of this PositionConfidenceEllipse.  # noqa: E501
        :type semi_minor_axis_length: float
        :param semi_minor_axis_length_coded_error: The semi_minor_axis_length_coded_error of this PositionConfidenceEllipse.  # noqa: E501
        :type semi_minor_axis_length_coded_error: PositionConfidenceCodedErrorEnumG
        :param semi_major_axis_orientation: The semi_major_axis_orientation of this PositionConfidenceEllipse.  # noqa: E501
        :type semi_major_axis_orientation: int
        :param semi_major_axis_orientation_error: The semi_major_axis_orientation_error of this PositionConfidenceEllipse.  # noqa: E501
        :type semi_major_axis_orientation_error: bool
        :param position_confidence_ellipse_extension_g: The position_confidence_ellipse_extension_g of this PositionConfidenceEllipse.  # noqa: E501
        :type position_confidence_ellipse_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'semi_major_axis_length': float,
            'semi_major_axis_length_coded_error': PositionConfidenceCodedErrorEnumG,
            'semi_minor_axis_length': float,
            'semi_minor_axis_length_coded_error': PositionConfidenceCodedErrorEnumG,
            'semi_major_axis_orientation': int,
            'semi_major_axis_orientation_error': bool,
            'position_confidence_ellipse_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'semi_major_axis_length': 'semiMajorAxisLength',
            'semi_major_axis_length_coded_error': 'semiMajorAxisLengthCodedError',
            'semi_minor_axis_length': 'semiMinorAxisLength',
            'semi_minor_axis_length_coded_error': 'semiMinorAxisLengthCodedError',
            'semi_major_axis_orientation': 'semiMajorAxisOrientation',
            'semi_major_axis_orientation_error': 'semiMajorAxisOrientationError',
            'position_confidence_ellipse_extension_g': 'positionConfidenceEllipseExtensionG'
        }

        self._semi_major_axis_length = semi_major_axis_length
        self._semi_major_axis_length_coded_error = semi_major_axis_length_coded_error
        self._semi_minor_axis_length = semi_minor_axis_length
        self._semi_minor_axis_length_coded_error = semi_minor_axis_length_coded_error
        self._semi_major_axis_orientation = semi_major_axis_orientation
        self._semi_major_axis_orientation_error = semi_major_axis_orientation_error
        self._position_confidence_ellipse_extension_g = position_confidence_ellipse_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'PositionConfidenceEllipse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PositionConfidenceEllipse of this PositionConfidenceEllipse.  # noqa: E501
        :rtype: PositionConfidenceEllipse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def semi_major_axis_length(self) -> float:
        """Gets the semi_major_axis_length of this PositionConfidenceEllipse.


        :return: The semi_major_axis_length of this PositionConfidenceEllipse.
        :rtype: float
        """
        return self._semi_major_axis_length

    @semi_major_axis_length.setter
    def semi_major_axis_length(self, semi_major_axis_length: float):
        """Sets the semi_major_axis_length of this PositionConfidenceEllipse.


        :param semi_major_axis_length: The semi_major_axis_length of this PositionConfidenceEllipse.
        :type semi_major_axis_length: float
        """

        self._semi_major_axis_length = semi_major_axis_length

    @property
    def semi_major_axis_length_coded_error(self) -> PositionConfidenceCodedErrorEnumG:
        """Gets the semi_major_axis_length_coded_error of this PositionConfidenceEllipse.


        :return: The semi_major_axis_length_coded_error of this PositionConfidenceEllipse.
        :rtype: PositionConfidenceCodedErrorEnumG
        """
        return self._semi_major_axis_length_coded_error

    @semi_major_axis_length_coded_error.setter
    def semi_major_axis_length_coded_error(self, semi_major_axis_length_coded_error: PositionConfidenceCodedErrorEnumG):
        """Sets the semi_major_axis_length_coded_error of this PositionConfidenceEllipse.


        :param semi_major_axis_length_coded_error: The semi_major_axis_length_coded_error of this PositionConfidenceEllipse.
        :type semi_major_axis_length_coded_error: PositionConfidenceCodedErrorEnumG
        """

        self._semi_major_axis_length_coded_error = semi_major_axis_length_coded_error

    @property
    def semi_minor_axis_length(self) -> float:
        """Gets the semi_minor_axis_length of this PositionConfidenceEllipse.


        :return: The semi_minor_axis_length of this PositionConfidenceEllipse.
        :rtype: float
        """
        return self._semi_minor_axis_length

    @semi_minor_axis_length.setter
    def semi_minor_axis_length(self, semi_minor_axis_length: float):
        """Sets the semi_minor_axis_length of this PositionConfidenceEllipse.


        :param semi_minor_axis_length: The semi_minor_axis_length of this PositionConfidenceEllipse.
        :type semi_minor_axis_length: float
        """

        self._semi_minor_axis_length = semi_minor_axis_length

    @property
    def semi_minor_axis_length_coded_error(self) -> PositionConfidenceCodedErrorEnumG:
        """Gets the semi_minor_axis_length_coded_error of this PositionConfidenceEllipse.


        :return: The semi_minor_axis_length_coded_error of this PositionConfidenceEllipse.
        :rtype: PositionConfidenceCodedErrorEnumG
        """
        return self._semi_minor_axis_length_coded_error

    @semi_minor_axis_length_coded_error.setter
    def semi_minor_axis_length_coded_error(self, semi_minor_axis_length_coded_error: PositionConfidenceCodedErrorEnumG):
        """Sets the semi_minor_axis_length_coded_error of this PositionConfidenceEllipse.


        :param semi_minor_axis_length_coded_error: The semi_minor_axis_length_coded_error of this PositionConfidenceEllipse.
        :type semi_minor_axis_length_coded_error: PositionConfidenceCodedErrorEnumG
        """

        self._semi_minor_axis_length_coded_error = semi_minor_axis_length_coded_error

    @property
    def semi_major_axis_orientation(self) -> int:
        """Gets the semi_major_axis_orientation of this PositionConfidenceEllipse.


        :return: The semi_major_axis_orientation of this PositionConfidenceEllipse.
        :rtype: int
        """
        return self._semi_major_axis_orientation

    @semi_major_axis_orientation.setter
    def semi_major_axis_orientation(self, semi_major_axis_orientation: int):
        """Sets the semi_major_axis_orientation of this PositionConfidenceEllipse.


        :param semi_major_axis_orientation: The semi_major_axis_orientation of this PositionConfidenceEllipse.
        :type semi_major_axis_orientation: int
        """
        if semi_major_axis_orientation is not None and semi_major_axis_orientation < 0:  # noqa: E501
            raise ValueError("Invalid value for `semi_major_axis_orientation`, must be a value greater than or equal to `0`")  # noqa: E501

        self._semi_major_axis_orientation = semi_major_axis_orientation

    @property
    def semi_major_axis_orientation_error(self) -> bool:
        """Gets the semi_major_axis_orientation_error of this PositionConfidenceEllipse.


        :return: The semi_major_axis_orientation_error of this PositionConfidenceEllipse.
        :rtype: bool
        """
        return self._semi_major_axis_orientation_error

    @semi_major_axis_orientation_error.setter
    def semi_major_axis_orientation_error(self, semi_major_axis_orientation_error: bool):
        """Sets the semi_major_axis_orientation_error of this PositionConfidenceEllipse.


        :param semi_major_axis_orientation_error: The semi_major_axis_orientation_error of this PositionConfidenceEllipse.
        :type semi_major_axis_orientation_error: bool
        """

        self._semi_major_axis_orientation_error = semi_major_axis_orientation_error

    @property
    def position_confidence_ellipse_extension_g(self) -> Dict[str, object]:
        """Gets the position_confidence_ellipse_extension_g of this PositionConfidenceEllipse.


        :return: The position_confidence_ellipse_extension_g of this PositionConfidenceEllipse.
        :rtype: Dict[str, object]
        """
        return self._position_confidence_ellipse_extension_g

    @position_confidence_ellipse_extension_g.setter
    def position_confidence_ellipse_extension_g(self, position_confidence_ellipse_extension_g: Dict[str, object]):
        """Sets the position_confidence_ellipse_extension_g of this PositionConfidenceEllipse.


        :param position_confidence_ellipse_extension_g: The position_confidence_ellipse_extension_g of this PositionConfidenceEllipse.
        :type position_confidence_ellipse_extension_g: Dict[str, object]
        """

        self._position_confidence_ellipse_extension_g = position_confidence_ellipse_extension_g
