from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.comparison_operator_enum_g import ComparisonOperatorEnumG
from openapi_server import util

from openapi_server.models.comparison_operator_enum_g import ComparisonOperatorEnumG  # noqa: E501

class EmissionsExtension(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comparison_operator=None):  # noqa: E501
        """EmissionsExtension - a model defined in OpenAPI

        :param comparison_operator: The comparison_operator of this EmissionsExtension.  # noqa: E501
        :type comparison_operator: ComparisonOperatorEnumG
        """
        self.openapi_types = {
            'comparison_operator': ComparisonOperatorEnumG
        }

        self.attribute_map = {
            'comparison_operator': 'comparisonOperator'
        }

        self._comparison_operator = comparison_operator

    @classmethod
    def from_dict(cls, dikt) -> 'EmissionsExtension':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmissionsExtension of this EmissionsExtension.  # noqa: E501
        :rtype: EmissionsExtension
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comparison_operator(self) -> ComparisonOperatorEnumG:
        """Gets the comparison_operator of this EmissionsExtension.


        :return: The comparison_operator of this EmissionsExtension.
        :rtype: ComparisonOperatorEnumG
        """
        return self._comparison_operator

    @comparison_operator.setter
    def comparison_operator(self, comparison_operator: ComparisonOperatorEnumG):
        """Sets the comparison_operator of this EmissionsExtension.


        :param comparison_operator: The comparison_operator of this EmissionsExtension.
        :type comparison_operator: ComparisonOperatorEnumG
        """
        if comparison_operator is None:
            raise ValueError("Invalid value for `comparison_operator`, must not be `None`")  # noqa: E501

        self._comparison_operator = comparison_operator
