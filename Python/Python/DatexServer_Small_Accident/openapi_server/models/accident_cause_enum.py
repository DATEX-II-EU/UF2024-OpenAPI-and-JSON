from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class AccidentCauseEnum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AVOIDANCEOFOBSTACLES = 'avoidanceOfObstacles'
    DRIVERDISTRACTION = 'driverDistraction'
    DRIVERDRUGABUSE = 'driverDrugAbuse'
    DRIVERILLNESS = 'driverIllness'
    EXCEEDINGSPEEDSLIMITS = 'exceedingSpeedsLimits'
    EXCESSALCOHOL = 'excessAlcohol'
    EXCESSIVEDRIVERTIREDNESS = 'excessiveDriverTiredness'
    IMPERMISSIBLEMANOEUVRE = 'impermissibleManoeuvre'
    LIMITEDVISIBILITY = 'limitedVisibility'
    NOTKEEPINGASAFEDISTANCE = 'notKeepingASafeDistance'
    ONTHEWRONGSIDEOFTHEROAD = 'onTheWrongSideOfTheRoad'
    PEDESTRIANINROAD = 'pedestrianInRoad'
    POORLANEADHERENCE = 'poorLaneAdherence'
    POORMERGEENTRYOREXITJUDGEMENT = 'poorMergeEntryOrExitJudgement'
    POORROADSURFACECONDITION = 'poorRoadSurfaceCondition'
    POORSURFACEADHERENCE = 'poorSurfaceAdherence'
    UNDISCLOSED = 'undisclosed'
    UNKNOWN = 'unknown'
    VEHICLEFAILURE = 'vehicleFailure'
    OTHER = 'other'
    EXTENDEDG = 'extendedG'
    def __init__(self):  # noqa: E501
        """AccidentCauseEnum - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'AccidentCauseEnum':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccidentCauseEnum of this AccidentCauseEnum.  # noqa: E501
        :rtype: AccidentCauseEnum
        """
        return util.deserialize_model(dikt, cls)
