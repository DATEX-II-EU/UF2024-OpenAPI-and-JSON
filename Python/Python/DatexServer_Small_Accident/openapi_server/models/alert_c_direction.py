from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.alert_c_direction_enum_g import AlertCDirectionEnumG
from openapi_server.models.linear_direction_enum_g import LinearDirectionEnumG
from openapi_server.models.multilingual_string import MultilingualString
from openapi_server import util

from openapi_server.models.alert_c_direction_enum_g import AlertCDirectionEnumG  # noqa: E501
from openapi_server.models.linear_direction_enum_g import LinearDirectionEnumG  # noqa: E501
from openapi_server.models.multilingual_string import MultilingualString  # noqa: E501

class AlertCDirection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_c_direction_coded=None, alert_c_direction_named=None, alert_c_affected_direction=None, alert_c_direction_extension_g=None):  # noqa: E501
        """AlertCDirection - a model defined in OpenAPI

        :param alert_c_direction_coded: The alert_c_direction_coded of this AlertCDirection.  # noqa: E501
        :type alert_c_direction_coded: AlertCDirectionEnumG
        :param alert_c_direction_named: The alert_c_direction_named of this AlertCDirection.  # noqa: E501
        :type alert_c_direction_named: MultilingualString
        :param alert_c_affected_direction: The alert_c_affected_direction of this AlertCDirection.  # noqa: E501
        :type alert_c_affected_direction: LinearDirectionEnumG
        :param alert_c_direction_extension_g: The alert_c_direction_extension_g of this AlertCDirection.  # noqa: E501
        :type alert_c_direction_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'alert_c_direction_coded': AlertCDirectionEnumG,
            'alert_c_direction_named': MultilingualString,
            'alert_c_affected_direction': LinearDirectionEnumG,
            'alert_c_direction_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'alert_c_direction_coded': 'alertCDirectionCoded',
            'alert_c_direction_named': 'alertCDirectionNamed',
            'alert_c_affected_direction': 'alertCAffectedDirection',
            'alert_c_direction_extension_g': 'alertCDirectionExtensionG'
        }

        self._alert_c_direction_coded = alert_c_direction_coded
        self._alert_c_direction_named = alert_c_direction_named
        self._alert_c_affected_direction = alert_c_affected_direction
        self._alert_c_direction_extension_g = alert_c_direction_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'AlertCDirection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AlertCDirection of this AlertCDirection.  # noqa: E501
        :rtype: AlertCDirection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_c_direction_coded(self) -> AlertCDirectionEnumG:
        """Gets the alert_c_direction_coded of this AlertCDirection.


        :return: The alert_c_direction_coded of this AlertCDirection.
        :rtype: AlertCDirectionEnumG
        """
        return self._alert_c_direction_coded

    @alert_c_direction_coded.setter
    def alert_c_direction_coded(self, alert_c_direction_coded: AlertCDirectionEnumG):
        """Sets the alert_c_direction_coded of this AlertCDirection.


        :param alert_c_direction_coded: The alert_c_direction_coded of this AlertCDirection.
        :type alert_c_direction_coded: AlertCDirectionEnumG
        """
        if alert_c_direction_coded is None:
            raise ValueError("Invalid value for `alert_c_direction_coded`, must not be `None`")  # noqa: E501

        self._alert_c_direction_coded = alert_c_direction_coded

    @property
    def alert_c_direction_named(self) -> MultilingualString:
        """Gets the alert_c_direction_named of this AlertCDirection.


        :return: The alert_c_direction_named of this AlertCDirection.
        :rtype: MultilingualString
        """
        return self._alert_c_direction_named

    @alert_c_direction_named.setter
    def alert_c_direction_named(self, alert_c_direction_named: MultilingualString):
        """Sets the alert_c_direction_named of this AlertCDirection.


        :param alert_c_direction_named: The alert_c_direction_named of this AlertCDirection.
        :type alert_c_direction_named: MultilingualString
        """

        self._alert_c_direction_named = alert_c_direction_named

    @property
    def alert_c_affected_direction(self) -> LinearDirectionEnumG:
        """Gets the alert_c_affected_direction of this AlertCDirection.


        :return: The alert_c_affected_direction of this AlertCDirection.
        :rtype: LinearDirectionEnumG
        """
        return self._alert_c_affected_direction

    @alert_c_affected_direction.setter
    def alert_c_affected_direction(self, alert_c_affected_direction: LinearDirectionEnumG):
        """Sets the alert_c_affected_direction of this AlertCDirection.


        :param alert_c_affected_direction: The alert_c_affected_direction of this AlertCDirection.
        :type alert_c_affected_direction: LinearDirectionEnumG
        """
        if alert_c_affected_direction is None:
            raise ValueError("Invalid value for `alert_c_affected_direction`, must not be `None`")  # noqa: E501

        self._alert_c_affected_direction = alert_c_affected_direction

    @property
    def alert_c_direction_extension_g(self) -> Dict[str, object]:
        """Gets the alert_c_direction_extension_g of this AlertCDirection.


        :return: The alert_c_direction_extension_g of this AlertCDirection.
        :rtype: Dict[str, object]
        """
        return self._alert_c_direction_extension_g

    @alert_c_direction_extension_g.setter
    def alert_c_direction_extension_g(self, alert_c_direction_extension_g: Dict[str, object]):
        """Sets the alert_c_direction_extension_g of this AlertCDirection.


        :param alert_c_direction_extension_g: The alert_c_direction_extension_g of this AlertCDirection.
        :type alert_c_direction_extension_g: Dict[str, object]
        """

        self._alert_c_direction_extension_g = alert_c_direction_extension_g
