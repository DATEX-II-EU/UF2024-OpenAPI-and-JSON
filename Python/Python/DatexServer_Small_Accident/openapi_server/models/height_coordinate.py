from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.altitude_confidence import AltitudeConfidence
from openapi_server.models.height_type_enum_g import HeightTypeEnumG
from openapi_server.models.position_accuracy import PositionAccuracy
from openapi_server import util

from openapi_server.models.altitude_confidence import AltitudeConfidence  # noqa: E501
from openapi_server.models.height_type_enum_g import HeightTypeEnumG  # noqa: E501
from openapi_server.models.position_accuracy import PositionAccuracy  # noqa: E501

class HeightCoordinate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, height_value=None, height_type=None, altitude_confidence=None, vertical_position_accuracy=None, height_coordinate_extension_g=None):  # noqa: E501
        """HeightCoordinate - a model defined in OpenAPI

        :param height_value: The height_value of this HeightCoordinate.  # noqa: E501
        :type height_value: float
        :param height_type: The height_type of this HeightCoordinate.  # noqa: E501
        :type height_type: HeightTypeEnumG
        :param altitude_confidence: The altitude_confidence of this HeightCoordinate.  # noqa: E501
        :type altitude_confidence: AltitudeConfidence
        :param vertical_position_accuracy: The vertical_position_accuracy of this HeightCoordinate.  # noqa: E501
        :type vertical_position_accuracy: PositionAccuracy
        :param height_coordinate_extension_g: The height_coordinate_extension_g of this HeightCoordinate.  # noqa: E501
        :type height_coordinate_extension_g: Dict[str, object]
        """
        self.openapi_types = {
            'height_value': float,
            'height_type': HeightTypeEnumG,
            'altitude_confidence': AltitudeConfidence,
            'vertical_position_accuracy': PositionAccuracy,
            'height_coordinate_extension_g': Dict[str, object]
        }

        self.attribute_map = {
            'height_value': 'heightValue',
            'height_type': 'heightType',
            'altitude_confidence': 'altitudeConfidence',
            'vertical_position_accuracy': 'verticalPositionAccuracy',
            'height_coordinate_extension_g': 'heightCoordinateExtensionG'
        }

        self._height_value = height_value
        self._height_type = height_type
        self._altitude_confidence = altitude_confidence
        self._vertical_position_accuracy = vertical_position_accuracy
        self._height_coordinate_extension_g = height_coordinate_extension_g

    @classmethod
    def from_dict(cls, dikt) -> 'HeightCoordinate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HeightCoordinate of this HeightCoordinate.  # noqa: E501
        :rtype: HeightCoordinate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def height_value(self) -> float:
        """Gets the height_value of this HeightCoordinate.


        :return: The height_value of this HeightCoordinate.
        :rtype: float
        """
        return self._height_value

    @height_value.setter
    def height_value(self, height_value: float):
        """Sets the height_value of this HeightCoordinate.


        :param height_value: The height_value of this HeightCoordinate.
        :type height_value: float
        """
        if height_value is None:
            raise ValueError("Invalid value for `height_value`, must not be `None`")  # noqa: E501

        self._height_value = height_value

    @property
    def height_type(self) -> HeightTypeEnumG:
        """Gets the height_type of this HeightCoordinate.


        :return: The height_type of this HeightCoordinate.
        :rtype: HeightTypeEnumG
        """
        return self._height_type

    @height_type.setter
    def height_type(self, height_type: HeightTypeEnumG):
        """Sets the height_type of this HeightCoordinate.


        :param height_type: The height_type of this HeightCoordinate.
        :type height_type: HeightTypeEnumG
        """

        self._height_type = height_type

    @property
    def altitude_confidence(self) -> AltitudeConfidence:
        """Gets the altitude_confidence of this HeightCoordinate.


        :return: The altitude_confidence of this HeightCoordinate.
        :rtype: AltitudeConfidence
        """
        return self._altitude_confidence

    @altitude_confidence.setter
    def altitude_confidence(self, altitude_confidence: AltitudeConfidence):
        """Sets the altitude_confidence of this HeightCoordinate.


        :param altitude_confidence: The altitude_confidence of this HeightCoordinate.
        :type altitude_confidence: AltitudeConfidence
        """

        self._altitude_confidence = altitude_confidence

    @property
    def vertical_position_accuracy(self) -> PositionAccuracy:
        """Gets the vertical_position_accuracy of this HeightCoordinate.


        :return: The vertical_position_accuracy of this HeightCoordinate.
        :rtype: PositionAccuracy
        """
        return self._vertical_position_accuracy

    @vertical_position_accuracy.setter
    def vertical_position_accuracy(self, vertical_position_accuracy: PositionAccuracy):
        """Sets the vertical_position_accuracy of this HeightCoordinate.


        :param vertical_position_accuracy: The vertical_position_accuracy of this HeightCoordinate.
        :type vertical_position_accuracy: PositionAccuracy
        """

        self._vertical_position_accuracy = vertical_position_accuracy

    @property
    def height_coordinate_extension_g(self) -> Dict[str, object]:
        """Gets the height_coordinate_extension_g of this HeightCoordinate.


        :return: The height_coordinate_extension_g of this HeightCoordinate.
        :rtype: Dict[str, object]
        """
        return self._height_coordinate_extension_g

    @height_coordinate_extension_g.setter
    def height_coordinate_extension_g(self, height_coordinate_extension_g: Dict[str, object]):
        """Sets the height_coordinate_extension_g of this HeightCoordinate.


        :param height_coordinate_extension_g: The height_coordinate_extension_g of this HeightCoordinate.
        :type height_coordinate_extension_g: Dict[str, object]
        """

        self._height_coordinate_extension_g = height_coordinate_extension_g
